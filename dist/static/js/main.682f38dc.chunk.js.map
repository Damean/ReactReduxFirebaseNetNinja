{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","React","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","firstName","lastName","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","SignUp","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","attachAuthIsReady","useFirestoreForProfile","userProfile","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.682f38dc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/create'>New Project</NavLink></li>\r\n      <li><a href='/' onClick={props.signOut}>Log out</a></li>\r\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({type: 'LOGIN_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'LOGIN_ERROR', err});\r\n    });\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type: 'SIGNOUT_SUCCESS'});\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0],\r\n        })\r\n      })\r\n      .then (() => {\r\n        dispatch({type: 'SIGNUP_SUCCESS'});\r\n      })\r\n      .catch((err) => {\r\n        dispatch({type: 'SIGNUP_ERROR', err});\r\n      });\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/signup'>Sign up</NavLink></li>\r\n      <li><NavLink to='/signin'>Login</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const {auth, profile} = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile}></SignedInLinks> : <SignedOutLinks></SignedOutLinks>;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\" >MarioPlan</Link>\r\n        {links}        \r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const {notifications} = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\" >\r\n            {notifications && notifications.map(item => {\r\n              return (\r\n                <li key={item.id} >\r\n                  <span className=\"pink-text\">{item.user} </span>\r\n                  <span>{item.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{project.createdAt && moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\" >\r\n      {projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id} >\r\n            <ProjectSummary project={project} key={project.id} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList;","//import React, { Component } from 'react'\r\nimport React from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends React.Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const {project, auth} = props;\r\n\r\n  if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>\r\n              { project.content }\r\n            </p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{project.createdAt && moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from './../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n  render() {\r\n    const {authError, auth} = this.props;\r\n\r\n    if (auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const {auth, authError} = this.props;\r\n\r\n    if (auth.uid) return <Redirect to='/' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId,\r\n      createdAt: new Date()\r\n    }).then(() => { \r\n      dispatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n    });\r\n  }\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../store/actions/projectActions';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const {auth} = this.props;\r\n\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed'\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNOUT_SUCCESS': \r\n      console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n  projects: [\r\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAIdcqIZvSBhSc2wnRchdwaAuj-IJty_ow\",\r\n  authDomain: \"net-ninja-mario-plan-7c162.firebaseapp.com\",\r\n  databaseURL: \"https://net-ninja-mario-plan-7c162.firebaseio.com\",\r\n  projectId: \"net-ninja-mario-plan-7c162\",\r\n  storageBucket: \"net-ninja-mario-plan-7c162.appspot.com\",\r\n  messagingSenderId: \"672929673550\",\r\n  appId: \"1:672929673550:web:9bcb5ee682b6244d67ae1f\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst firestore = firebase.firestore();\r\nconst settings = { timestampsInSnapshots: true};\r\nfirestore.settings(settings);\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, {attachAuthIsReady: true, useFirestoreForProfile: true, userProfile: 'users'}), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}